//=========================================================
// inc/InitDevice.h: generated by Hardware Configurator
//
// This file will be regenerated when saving a document.
// leave the sections inside the "$[...]" comment tags alone
// or they will be overwritten!
//=========================================================
#ifndef __Nokia5110_LIB_H__
#define __Nokia5110_LIB_H__

#define LCD_size_y   14
#define LCD_size_x   6
#define LCD_C  0
#define LCD_D  1

extern unsigned char code ASCII[][5] = {
	//1 First 32 characters (0x00-0x19) are ignored. These are
	// non-displayable, control characters.
	{	0x00, 0x00, 0x00, 0x00, 0x00} // 0x20      0
	, {	0x00, 0x00, 0x5f, 0x00, 0x00} // 0x21 !		1
	, {	0x00, 0x07, 0x00, 0x07, 0x00} // 0x22 "		2
	, {	0x14, 0x7f, 0x14, 0x7f, 0x14} // 0x23 #		3
	, {	0x24, 0x2a, 0x7f, 0x2a, 0x12} // 0x24 $		4
	, {	0x23, 0x13, 0x08, 0x64, 0x62} // 0x25 %		5
	, {	0x36, 0x49, 0x55, 0x22, 0x50} // 0x26 &		6
	, {	0x00, 0x05, 0x03, 0x00, 0x00} // 0x27 '		7
	, {	0x00, 0x1c, 0x22, 0x41, 0x00} // 0x28 (		8
	, {	0x00, 0x41, 0x22, 0x1c, 0x00} // 0x29 )		9
	, {	0x14, 0x08, 0x3e, 0x08, 0x14} // 0x2a *	`	10
	, {	0x08, 0x08, 0x3e, 0x08, 0x08} // 0x2b +		11
	, {	0x00, 0x50, 0x30, 0x00, 0x00} // 0x2c ,		12
	, {	0x08, 0x08, 0x08, 0x08, 0x08} // 0x2d -		13
	, {	0x00, 0x60, 0x60, 0x00, 0x00} // 0x2e .		14
	, {	0x20, 0x10, 0x08, 0x04, 0x02} // 0x2f /		15
	, {	0x3e, 0x51, 0x49, 0x45, 0x3e} // 0x30 0		16
	, {	0x00, 0x42, 0x7f, 0x40, 0x00} // 0x31 1		17
	, {	0x42, 0x61, 0x51, 0x49, 0x46} // 0x32 2		18
	, {	0x21, 0x41, 0x45, 0x4b, 0x31} // 0x33 3		19
	, {	0x18, 0x14, 0x12, 0x7f, 0x10} // 0x34 4		20
	, {	0x27, 0x45, 0x45, 0x45, 0x39} // 0x35 5		21
	, {	0x3c, 0x4a, 0x49, 0x49, 0x30} // 0x36 6		22
	, {	0x01, 0x71, 0x09, 0x05, 0x03} // 0x37 7		23
	, {	0x36, 0x49, 0x49, 0x49, 0x36} // 0x38 8		24
	, {	0x06, 0x49, 0x49, 0x29, 0x1e} // 0x39 9		25
	, {	0x00, 0x36, 0x36, 0x00, 0x00} // 0x3a :		26
	, {	0x00, 0x56, 0x36, 0x00, 0x00} // 0x3b ;		27
	, {	0x08, 0x14, 0x22, 0x41, 0x00} // 0x3c <		28
	, {	0x14, 0x14, 0x14, 0x14, 0x14} // 0x3d =		29
	, {	0x00, 0x41, 0x22, 0x14, 0x08} // 0x3e >		30
	, {	0x02, 0x01, 0x51, 0x09, 0x06} // 0x3f ?		31
	, {	0x32, 0x49, 0x79, 0x41, 0x3e} // 0x40 @		32
	, {	0x7e, 0x11, 0x11, 0x11, 0x7e} // 0x41 A		33
	, {	0x7f, 0x49, 0x49, 0x49, 0x36} // 0x42 B		34
	, {	0x3e, 0x41, 0x41, 0x41, 0x22} // 0x43 C		35
	, {	0x7f, 0x41, 0x41, 0x22, 0x1c} // 0x44 D		36
	, {	0x7f, 0x49, 0x49, 0x49, 0x41} // 0x45 E		37
	, {	0x7f, 0x09, 0x09, 0x09, 0x01} // 0x46 F		38
	, {	0x3e, 0x41, 0x49, 0x49, 0x7a} // 0x47 G		39
	, {	0x7f, 0x08, 0x08, 0x08, 0x7f} // 0x48 H		40
	, {	0x00, 0x41, 0x7f, 0x41, 0x00} // 0x49 I		41
	, {	0x20, 0x40, 0x41, 0x3f, 0x01} // 0x4a J		42
	, {	0x7f, 0x08, 0x14, 0x22, 0x41} // 0x4b K		43
	, {	0x7f, 0x40, 0x40, 0x40, 0x40} // 0x4c L		44
	, {	0x7f, 0x02, 0x0c, 0x02, 0x7f} // 0x4d M		45
	, {	0x7f, 0x04, 0x08, 0x10, 0x7f} // 0x4e N		46
	, {	0x3e, 0x41, 0x41, 0x41, 0x3e} // 0x4f O		47
	, {	0x7f, 0x09, 0x09, 0x09, 0x06} // 0x50 P		48
	, {	0x3e, 0x41, 0x51, 0x21, 0x5e} // 0x51 Q		49
	, {	0x7f, 0x09, 0x19, 0x29, 0x46} // 0x52 R		50
	, {	0x46, 0x49, 0x49, 0x49, 0x31} // 0x53 S		51
	, {	0x01, 0x01, 0x7f, 0x01, 0x01} // 0x54 T		52
	, {	0x3f, 0x40, 0x40, 0x40, 0x3f} // 0x55 U		53
	, {	0x1f, 0x20, 0x40, 0x20, 0x1f} // 0x56 V		54
	, {	0x3f, 0x40, 0x38, 0x40, 0x3f} // 0x57 W		55
	, {	0x63, 0x14, 0x08, 0x14, 0x63} // 0x58 X		56
	, {	0x07, 0x08, 0x70, 0x08, 0x07} // 0x59 Y		57
	, {	0x61, 0x51, 0x49, 0x45, 0x43} // 0x5a Z		58
	, {	0x00, 0x7f, 0x41, 0x41, 0x00} // 0x5b [		59
	, {	0x02, 0x04, 0x08, 0x10, 0x20} // 0x5c \		60
	, {	0x00, 0x41, 0x41, 0x7f, 0x00} // 0x5d ]		61
	, {	0x04, 0x02, 0x01, 0x02, 0x04} // 0x5e ^		63
	, {	0x40, 0x40, 0x40, 0x40, 0x40} // 0x5f _		64
	, {	0x00, 0x01, 0x02, 0x04, 0x00} // 0x60 `		65
	, {	0x20, 0x54, 0x54, 0x54, 0x78} // 0x61 a		66
	, {	0x7f, 0x48, 0x44, 0x44, 0x38} // 0x62 b		67
	, {	0x38, 0x44, 0x44, 0x44, 0x20} // 0x63 c		68
	, {	0x38, 0x44, 0x44, 0x48, 0x7f} // 0x64 d		69
	, {	0x38, 0x54, 0x54, 0x54, 0x18} // 0x65 e		70
	, {	0x08, 0x7e, 0x09, 0x01, 0x02} // 0x66 f		71
	, {	0x0c, 0x52, 0x52, 0x52, 0x3e} // 0x67 g		72
	, {	0x7f, 0x08, 0x04, 0x04, 0x78} // 0x68 h		73
	, {	0x00, 0x44, 0x7d, 0x40, 0x00} // 0x69 i		74
	, {	0x20, 0x40, 0x44, 0x3d, 0x00} // 0x6a j		75
	, {	0x7f, 0x10, 0x28, 0x44, 0x00} // 0x6b k		76
	, {	0x00, 0x41, 0x7f, 0x40, 0x00} // 0x6c l		77
	, {	0x7c, 0x04, 0x18, 0x04, 0x78} // 0x6d m		78
	, {	0x7c, 0x08, 0x04, 0x04, 0x78} // 0x6e n		79
	, {	0x38, 0x44, 0x44, 0x44, 0x38} // 0x6f o		80
	, {	0x7c, 0x14, 0x14, 0x14, 0x08} // 0x70 p		81
	, {	0x08, 0x14, 0x14, 0x18, 0x7c} // 0x71 q		82
	, {	0x7c, 0x08, 0x04, 0x04, 0x08} // 0x72 r		83
	, {	0x48, 0x54, 0x54, 0x54, 0x20} // 0x73 s		84
	, {	0x04, 0x3f, 0x44, 0x40, 0x20} // 0x74 t		85
	, {	0x3c, 0x40, 0x40, 0x20, 0x7c} // 0x75 u		86
	, {	0x1c, 0x20, 0x40, 0x20, 0x1c} // 0x76 v		87
	, {	0x3c, 0x40, 0x30, 0x40, 0x3c} // 0x77 w		88
	, {	0x44, 0x28, 0x10, 0x28, 0x44} // 0x78 x		89
	, {	0x0c, 0x50, 0x50, 0x50, 0x3c} // 0x79 y		90
	, {	0x44, 0x64, 0x54, 0x4c, 0x44} // 0x7a z		91
	, {	0x00, 0x08, 0x36, 0x41, 0x00} // 0x7b {		92
	, {	0x00, 0x00, 0x7f, 0x00, 0x00} // 0x7c |		93
	, {	0x00, 0x41, 0x36, 0x08, 0x00} // 0x7d }		94
	, {	0x10, 0x08, 0x08, 0x10, 0x08} // 0x7e ~		95
	, {	0x78, 0x46, 0x41, 0x46, 0x78} // 0x7f DEL	97
};

extern void lcdWrite(unsigned char dc, unsigned char value);
extern void lcdPrintChar(unsigned char c);
extern void lcd_CharCheck(unsigned char c);
extern void lcdPrintString(char *c);
extern void lcdClearLine(y);
extern void lcdClear();
extern void DISPLAY_Init();
extern void lcdLocate(unsigned char x, unsigned char y);

extern int LCD_line = 0;
extern int LCD_char_col = 0;
